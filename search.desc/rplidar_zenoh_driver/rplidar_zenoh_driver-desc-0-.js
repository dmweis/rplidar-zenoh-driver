searchState.loadedDescShard("rplidar_zenoh_driver", 0, "protobuf\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA primitive representing an arrow\nCamera calibration parameters\nA circle annotation on a 2D image\nA color in RGBA format\nA compressed image\nA primitive representing a cube or rectangular prism\nA primitive representing a cylinder, elliptic cylinder, or …\nA transform between two reference frames in 3D space\nAn array of FrameTransform messages\nGeoJSON data for annotating maps\nA 2D grid of data\nArray of annotations for a 2D image\nA key with its associated value\nA single scan from a planar laser range-finder\nA primitive representing a series of points connected by …\nA navigation satellite fix for any Global Navigation …\nA log message\nA primitive representing a 3D model file loaded from an …\nA field present within each element in a byte array of …\nA point representing a position in 2D space\nA point representing a position in 3D space\nA collection of N-dimensional points, which may contain …\nAn array of points on a 2D image\nA position and orientation for an object or reference …\nA timestamped pose for an object or reference frame in 3D …\nAn array of timestamped poses for an object or reference …\nA quaternion representing a rotation in 3D space\nA raw image\nA visual element in a 3D scene. An entity may be composed …\nCommand to remove previously published entities\nAn update to the entities displayed in a 3D scene\nA primitive representing a sphere or ellipsoid\nA text label on a 2D image\nA primitive representing a text label\nA primitive representing a set of triangles or a surface …\nA vector in 2D space that represents a direction only\nA vector in 3D space that represents a direction only\nAlpha value between 0 and 1\nAltitude in meters\nArrow primitives\nBlue value between 0 and 1\nBackground fill color\nWhether the text should respect <code>pose.orientation</code> (false) …\n0-1, ratio of the diameter of the cylinder’s bottom face …\nSize of single grid cell along x and y axes, relative to …\nNumber of bytes between cells within a row in <code>data</code>\nName of the child frame\nCircle annotations\nColor of the arrow\nColor of the cylinder\nColor of the sphere\nSolid color to use for the whole model if <code>override_color</code> …\nSolid color to use for the whole line. One of <code>color</code> or …\nColor of the cube\nColor of the text\nSolid color to use for the whole shape. One of <code>color</code> or …\nPer-point colors (if specified, must have the same length …\nPer-vertex colors (if specified, must have the same length …\nNumber of grid columns\nCube primitives\nCylinder primitives\nDistortion parameters\nGrid cell data, interpreted using <code>fields</code>, in row-major …\nEmbedded model. One of <code>url</code> or <code>data</code> should be provided. If …\nPoint data, interpreted using <code>fields</code>\nCompressed image data\nRaw image data\nScene entities to delete\nCircle diameter in pixels\nName of distortion model\nEncoding of the raw image data\nBearing of last point, in radians\nScene entities to add or replace\nFields in <code>data</code>. <code>red</code>, <code>green</code>, <code>blue</code>, and <code>alpha</code> are optional …\nFields in <code>data</code>. At least 2 coordinate fields from <code>x</code>, <code>y</code>, …\nFilename\nFill color\nFill color\nFont size in pixels\nFont size (height of one line of text)\nImage format\nFrame of reference for pose position and orientation\nFrame for the sensor. Latitude and longitude readings are …\nFrame of reference\nFrame of reference for the camera. The origin of the frame …\nFrame of reference\nFrame of reference for the image. The origin of the frame …\nFrame of reference for the image. The origin of the frame …\nFrame of reference\nFrame of reference for pose position and orientation\nFrame of reference\nWhether the entity should keep its location in the fixed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGreen value between 0 and 1\nGeoJSON data encoded as a UTF-8 string\nDiameter of the arrow head\nLength of the arrow head\nImage height\nImage height\nIdentifier for the entity. A entity will replace any prior …\nIdentifier which must match if <code>type</code> is <code>MATCHING_ID</code>.\nIndices into the <code>points</code> and <code>colors</code> attribute arrays, which …\nIndices into the <code>points</code> and <code>colors</code> attribute arrays, which …\nIntensity of detections\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIntrinsic camera matrix (3x3 row-major matrix)\nKey\nLatitude in degrees\nReturns the enum value of <code>level</code>, or the default if the …\nLog level\nLength of time (relative to <code>timestamp</code>) after which the …\nLine number in the file\nNested message and enum types in <code>LinePrimitive</code>.\nLine primitives\nNested message and enum types in <code>LocationFix</code>.\nNested message and enum types in <code>Log</code>.\nLongitude in degrees\nMedia type of embedded model (e.g. <code>model/gltf-binary</code>). …\nLog message\nAdditional user-provided metadata associated with the …\nModel primitives\nName of the field\nProcess or node name\nByte offset from start of data buffer\nQuaternion denoting orientation in 3D space\nOutline color\nOutline color\nPer-point colors, if <code>type</code> is <code>POINTS</code>, or per-segment stroke …\nWhether to use the color specified in <code>color</code> instead of any …\nProjection/camera matrix (3x4 row-major matrix)\nNested message and enum types in <code>PackedElementField</code>.\nName of the parent frame\nNumber of bytes between points in the <code>data</code>\nPoints in 2D image coordinates (pixels)\nPoints along the line\nVertices to use for triangles, interpreted as a list of …\nPoints annotations\nNested message and enum types in <code>PointsAnnotation</code>.\nPose in 3D space\nPosition of the arrow’s tail and orientation of the …\nPosition of the center of the cylinder and orientation of …\nPosition of the center of the sphere and orientation of …\nOrigin of grid’s corner relative to frame of reference; …\nOrigin of model relative to reference frame\nThe origin of the point cloud relative to the frame of …\nOrigin of lines relative to reference frame\nPosition of the center of the cube and orientation of the …\nPosition of the center of the text box and orientation of …\nOrigin of triangles relative to reference frame\nOrigin of scan relative to frame of reference; points are …\nPoses in 3D space\nPoint denoting position in 3D space\nBottom-left origin of the text label in 2D image …\nCenter of the circle in 2D image coordinates (pixels)\nPosition covariance (m^2) defined relative to a tangential …\nReturns the enum value of <code>position_covariance_type</code>, or the …\nIf <code>position_covariance</code> is available, …\nRed value between 0 and 1\nRectification matrix (stereo cameras only, 3x3 row-major …\nDistance of detections from origin; assumed to be at …\nRotation component of the transform\nNumber of bytes between rows in <code>data</code>\nScale factor to apply to the model along each axis\nIndicates whether <code>thickness</code> is a fixed size in screen …\nIndicates whether <code>font_size</code> is a fixed size in screen …\nNested message and enum types in <code>SceneEntityDeletion</code>.\nSets <code>level</code> to the provided enum value.\nSets <code>position_covariance_type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nSets <code>type</code> to the provided enum value.\nDiameter of the arrow shaft\nLength of the arrow shaft\nSize of the cylinder’s bounding box\nSize (diameter) of the sphere along each axis\nSize of the cube along each axis\nSphere primitives\nBearing of first point, in radians\nByte length of a single row\nText to display\nText\nText color\nText primitives\nText annotations\nStroke thickness in pixels\nLine thickness\nLine thickness in pixels\nTimestamp of pose\nTimestamp of the message\nTimestamp of annotation\nTimestamp of grid\nTimestamp of annotation\nTimestamp of calibration data\nTimestamp of point cloud\nTimestamp of image\nTimestamp of image\nTimestamp of transform\nTimestamp of the entity\nTimestamp of the deletion. Only matching entities earlier …\nTimestamp of pose\nTimestamp of circle\nTimestamp of log message\nTimestamp of scan\n0-1, ratio of the diameter of the cylinder’s top face …\nArray of transforms\nTranslation component of the transform\nTriangle list primitives\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nReturns the enum value of <code>type</code>, or the default if the …\nType of points annotation to draw\nType of data in the field. Integers are stored using …\nDrawing primitive to use for lines\nType of deletion action to perform\nURL pointing to model file. One of <code>url</code> or <code>data</code> should be …\nValue\nw value\nImage width\nImage width\nx value\nx coordinate length\nx coordinate position\nx coordinate position\nx coordinate length\ny value\ny coordinate length\ny coordinate position\ny coordinate position\ny coordinate length\nz value\nz coordinate length\nz coordinate position\nIndividual line segments: 0-1, 2-3, 4-5, …\nClosed polygon: 0-1, 1-2, …, (n-1)-n, n-0\nConnected line segments: 0-1, 1-2, …, (n-1)-n\nAn enumeration indicating how input points should be …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.\nType of position covariance\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>PositionCovarianceType</code>, or <code>None</code> if …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of …\nLog level\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.\nNumeric type\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>NumericType</code>, or <code>None</code> if <code>value</code> is not …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>NumericType</code>.\nIndividual line segments: 0-1, 2-3, 4-5, …\nClosed polygon: 0-1, 1-2, …, (n-1)-n, n-0\nConnected line segments: 0-1, 1-2, …, (n-1)-n\nIndividual points: 0, 1, 2, …\nType of points annotation\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.\nDelete all existing entities on the same topic\nDelete the existing entity on the same topic that has the …\nAn enumeration indicating which entities should match a …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.")